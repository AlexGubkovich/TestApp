// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestApp.Data;

#nullable disable

namespace TestApp.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230720170358_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestApp.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "702 8th Street",
                            City = "Atlanta",
                            Name = "Super Mart of the West",
                            Phone = "(800) 555-55-99",
                            State = "Georgia"
                        },
                        new
                        {
                            Id = 2,
                            Address = "702 8th Street",
                            City = "Dallas",
                            Name = "Electronic Deport",
                            Phone = "(900) 556-33-33",
                            State = "Texas"
                        },
                        new
                        {
                            Id = 3,
                            Address = "702 8th Street",
                            City = "Bentonville",
                            Name = "ElectricMax",
                            Phone = "(763) 888-00-11",
                            State = "Arkansas"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6912),
                            CompanyId = 1,
                            FirstName = "John",
                            LastName = "Heart",
                            Position = "CEO",
                            Title = "Mr. "
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6960),
                            CompanyId = 1,
                            FirstName = "Olivia",
                            LastName = "Peyton",
                            Position = "Developer",
                            Title = "Mrs. "
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6963),
                            CompanyId = 2,
                            FirstName = "Robert",
                            LastName = "Reagan",
                            Position = "Manager",
                            Title = "Mr. "
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6965),
                            CompanyId = 2,
                            FirstName = "Cynthia",
                            LastName = "Stanvick",
                            Position = "TeamLead",
                            Title = "Mrs. "
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6967),
                            CompanyId = 3,
                            FirstName = "Tim",
                            LastName = "Cook",
                            Position = "CEO",
                            Title = "Mr. "
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6970),
                            CompanyId = 3,
                            FirstName = "Adam",
                            LastName = "Smith",
                            Position = "Developer",
                            Title = "Mr. "
                        });
                });

            modelBuilder.Entity("TestApp.Data.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            EmployeeId = 1,
                            InvoiceNumber = 100
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            EmployeeId = 2,
                            InvoiceNumber = 101
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            EmployeeId = 3,
                            InvoiceNumber = 102
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            EmployeeId = 4,
                            InvoiceNumber = 103
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 3,
                            EmployeeId = 5,
                            InvoiceNumber = 104
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 3,
                            EmployeeId = 6,
                            InvoiceNumber = 105
                        });
                });

            modelBuilder.Entity("TestApp.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StoreCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6974),
                            StoreCity = "Las Vegas"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6977),
                            StoreCity = "Las Vegas"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 2,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6979),
                            StoreCity = "San Jose"
                        },
                        new
                        {
                            Id = 4,
                            CompanyId = 2,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6980),
                            StoreCity = "San Jose"
                        },
                        new
                        {
                            Id = 5,
                            CompanyId = 3,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6982),
                            StoreCity = "Seattle"
                        },
                        new
                        {
                            Id = 6,
                            CompanyId = 3,
                            OrderDate = new DateTime(2023, 7, 20, 20, 3, 58, 67, DateTimeKind.Local).AddTicks(6984),
                            StoreCity = "Seattle"
                        });
                });

            modelBuilder.Entity("TestApp.Data.Employee", b =>
                {
                    b.HasOne("TestApp.Data.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TestApp.Data.Note", b =>
                {
                    b.HasOne("TestApp.Data.Company", "Company")
                        .WithMany("Notes")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestApp.Data.Employee", "Employee")
                        .WithOne("Note")
                        .HasForeignKey("TestApp.Data.Note", "EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TestApp.Data.Order", b =>
                {
                    b.HasOne("TestApp.Data.Company", "Company")
                        .WithMany("History")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("TestApp.Data.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("History");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("TestApp.Data.Employee", b =>
                {
                    b.Navigation("Note");
                });
#pragma warning restore 612, 618
        }
    }
}
