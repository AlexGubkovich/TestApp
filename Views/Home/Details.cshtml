@model int
@{
    ViewData["Title"] = "Company Details";

    var companyInputs = new[] {
        new Input { LabelName = "Id", InputId = "companyId"},
        new Input { LabelName = "Name", InputId = "companyName"},
        new Input { LabelName = "Address", InputId = "companyAddress"},
        new Input { LabelName = "City", InputId = "companyCity"},
        new Input { LabelName = "State", InputId = "companyState"}
    };

    var employeeInputs = new[] {
        new Input { LabelName = "First Name", InputId = "employeeFirstName"},
        new Input { LabelName = "Last Name", InputId = "employeeLastName"},
        new Input { LabelName = "Title", InputId = "employeeTitle"},
        new Input { LabelName = "Birth Date", InputId = "employeeBirthDate"},
        new Input { LabelName = "Position", InputId = "employeePosition"}
    };
}

<div class="row gx-5 mb-4">
    <div class="col-auto">
        <h5>Company Details</h5>
    </div>
    <div class="col-auto">
        <h5 id="companyNameHeader" class="lead"></h5>
    </div>
</div>

<div class="row p-2">
    <div class="col-auto border-top border-bottom mx-3 mb-4">
        <detail caption="Info" button-images=@(new List<string> { "/images/check.svg" })>
            @{
                RenderInputs(companyInputs);
            }
        </detail>
    </div>
    <div class="col-auto border-top border-bottom mx-3 mb-4">
        <detail content-attributes="table-responsive" caption="History" button-images=@(new List<string> { "/images/refresh.svg" })>
            <table id="history" class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Order Date</th>
                        <th scope="col">Store City</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </detail>
    </div>
    <div class="col-auto border-top border-bottom mx-3 mb-4">
        <detail content-attributes="table-responsive" caption="Notes" 
        button-images=@(new List<string> { "/images/add.svg", "/images/remove.svg", "/images/refresh.svg" })>
            <table id="notes" class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col">Invoice Number</th>
                        <th scope="col">Employee</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </detail>
    </div>
    <div class="col-auto border-top border-bottom mx-3 mb-4">
        <div class="row">
            <div class="col-auto">
                <detail content-attributes="table-responsive" caption="Employees"
                button-images=@(new List<string> { "/images/add.svg", "/images/edit.svg", "/images/refresh.svg" })>
                    <table id="employees" class="table table-bordered">
                        <thead>
                            <tr>
                                <th scope="col">First Name</th>
                                <th scope="col">Last Name</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </detail>
            </div>
            <div class="col-auto">
                <detail caption="" button-images=@(new List<string> { "/images/edit.svg", "/images/remove.svg" })>
                    @{
                        RenderInputs(employeeInputs);
                    }
                </detail>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const getCompanyUrl = '@Url.Action("Get", "Companies", new { id = Model })'
        $(document).ready(getRequest(getCompanyUrl, displayCompanyDetails))

        function displayCompanyDetails(company)
        {
            $('#companyNameHeader').append(company.name);

            displayHistory(company.history);
            displayNotes(company.notes);
        }

        function displayHistory(history){
            $.each(history, function (i, order) {
                $('#history > tbody')
                    .append(`
                        <tr>
                            <td>${formatDate(new Date(order.orderDate))}</td>
                            <td>${order.storeCity}</td>
                        </tr>
                    `)
            });
        }

        function displayNotes(notes) {
            $.each(notes, function (i, note) {
                $('#notes > tbody')
                    .append(`
                        <tr>
                            <td>${note.employeeFullName}</td>
                            <td>${note.invoiceNumber}</td>
                        </tr>
                    `)
            });
        }
    </script>
}

@functions {
    private class Input
    {
        public string LabelName { get; set; } = string.Empty;
        public string InputId { get; set; } = string.Empty;
    }

    private void RenderInputs(IEnumerable<Input> inputs)
    {
        foreach (var input in inputs)
        {
            <div class="row align-items-center mb-2">
                <div class="col-4">
                    <label for="@input.InputId" class="">@input.LabelName:</label>
                </div>
                <div class="col-8">
                    <input type="text" class="form-control" id="@input.InputId">
                </div>
            </div>
        }
    }
}